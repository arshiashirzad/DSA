#include <iostream>

using namespace std;

const int N = 8;

void printBoard(int board[N][N]) {
  
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < N; j++) {
            cout << (board[i][j] ? " X " : " . ");
        }
        cout << endl;
    }
    cout << endl;
}

bool isSafe(int board[N][N], int row, int col) {
    for (int i = 0; i < row; i++) {
        if (board[i][col])
          return false;

        if (col - (row - i) >= 0 && board[i][col - (row - i)])
          return false;

        if (col + (row - i) < N && board[i][col + (row - i)])
          return false;
    }
    return true;
}

void solveNQueens(int board[N][N], int row) {
  
    if (row == N) {
        printBoard(board);
        return;
    }

    for (int col = 0; col < N; col++) {
        if (isSafe(board, row, col)) {
            board[row][col] = 1;
            solveNQueens(board, row + 1);
            board[row][col] = 0;
        }
    }
}

int main() {
    int board[N][N] = {0};

    solveNQueens(board, 0);

    return 0;
}
